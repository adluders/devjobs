{"version":3,"sources":["context/JobContext.js","context/ThemeContext.js","components/Detail.js","static/logo.svg","static/icon-sun.svg","static/icon-moon.svg","components/Header.js","components/Card.js","components/Cards.js","components/Home.js","App.js","index.js"],"names":["JobContext","createContext","GET_JOBS","gql","JobContextProvider","children","useQuery","data","loading","error","Provider","value","ThemeContext","ThemeContextProvider","useState","darkMode","setDarkMode","updateTheme","Detail","useContext","slug","useParams","allJob","filter","job","company","contract","apply","description","location","logo","logoBackground","position","postedDate","requirement","role","website","className","style","backgroundColor","src","asset","url","alt","href","target","rel","content","items","map","item","inx","Header","to","Logo","Sun","onClick","Moon","Card","Cards","_id","Home","App","path","component","exact","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"oOAGaA,EAAaC,0BAEpBC,EAAWC,YAAH,4bAwCCC,EAVY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,EAAiCC,YAASJ,GAAlCK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAEvB,OACE,cAACT,EAAWU,SAAZ,CAAqBC,MAAO,CAAEJ,OAAMC,UAASC,SAA7C,SACGJ,K,QCtCMO,EAAeX,0BAcbY,EAZc,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SAC9B,EAAgCS,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAIA,OACE,cAACJ,EAAaF,SAAd,CAAuBC,MAAO,CAAEI,WAAUE,YAHxB,kBAAMD,GAAaD,KAGrC,SACGV,KCgGQa,EAtGA,WACb,IAAQH,EAAaI,qBAAWP,GAAxBG,SAEFK,EAASC,cAATD,KAKN,EAJiBD,qBAAWnB,GAApBO,KAEce,OAAOC,QAAO,SAACC,GAAD,OAASA,EAAIC,UAAYL,KAehD,GAZXK,EADF,EACEA,QACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,YACAC,EALF,EAKEA,SACAC,EANF,EAMEA,KACAC,EAPF,EAOEA,eACAC,EARF,EAQEA,SACAC,EATF,EASEA,WACAC,EAVF,EAUEA,YACAC,EAXF,EAWEA,KACAC,EAZF,EAYEA,QAGF,OACE,sBAAKC,UAAS,iBAAYtB,EAAW,OAAS,IAA9C,UACE,0BAASsB,UAAU,gBAAnB,UACE,qBACEA,UAAU,sBACVC,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,IAF/B,SAIE,qBAAKS,IAAKV,EAAKW,MAAMC,IAAKC,IAAKlB,MAGjC,sBAAKY,UAAU,sBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,6BAAKZ,IACL,4BAAIW,OAGN,qBAAKC,UAAU,0BAAf,SACE,mBACEA,UAAU,SACVO,KAAMR,EACNS,OAAO,SACPC,IAAI,sBAJN,kCAYN,uBAAMT,UAAU,iBAAhB,UACE,0BAASA,UAAU,yBAAnB,UACE,sBAAKA,UAAU,iCAAf,UACE,8BACGJ,EADH,MACkBP,KAElB,6BAAKM,IACL,4BAAIH,OAGN,qBAAKQ,UAAU,6BAAf,SACE,mBACEO,KAAMjB,EACNU,UAAU,iBACVQ,OAAO,SACPC,IAAI,sBAJN,4BAWJ,yBAAST,UAAU,8BAAnB,SACE,kCAAKT,EAAL,SAGF,0BAASS,UAAU,+BAAnB,UACE,8CACA,kCAAKH,EAAYa,QAAjB,OACA,6BACGb,EAAYc,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACrB,mCAAgBD,EAAhB,MAASC,WAKf,0BAASd,UAAU,uBAAnB,UACE,kDACA,kCAAKF,EAAKY,QAAV,OACA,6BACGZ,EAAKa,MAAMC,KAAI,SAACd,EAAMgB,GAAP,OACd,mCAAgBhB,EAAhB,MAASgB,kBClGR,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,sCC+B1BC,EAxBA,WACb,MAAkCjC,qBAAWP,GAArCG,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,YAElB,OACE,iCACE,sBAAKoB,UAAU,YAAf,UACE,cAAC,IAAD,CAAMgB,GAAG,IAAT,SACE,qBAAKb,IAAKc,EAAMX,IAAI,mBAGtB,sBAAKN,UAAU,eAAf,UACE,qBAAKG,IAAKe,EAAKZ,IAAI,eAEnB,qBAAKN,UAAU,UAAUmB,QAAS,kBAAMvC,KAAxC,SACE,qBAAKoB,UAAS,iBAAYtB,EAAW,OAAS,aAGhD,qBAAKyB,IAAKiB,EAAMd,IAAI,uBCiBfe,EArCF,SAAC,GAAa,IAAXlC,EAAU,EAAVA,IACNT,EAAaI,qBAAWP,GAAxBG,SAGNU,EAOED,EAPFC,QACAC,EAMEF,EANFE,SACAG,EAKEL,EALFK,SACAG,EAIER,EAJFQ,SACAC,EAGET,EAHFS,WACAH,EAEEN,EAFFM,KACAC,EACEP,EADFO,eAGF,OACE,cAAC,IAAD,CAAMsB,GAAE,WAAM5B,GAAd,SACE,sBAAKY,UAAS,eAAUtB,EAAW,OAAS,IAA5C,UACE,qBACEsB,UAAU,eACVC,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,IAF/B,SAIE,qBAAKS,IAAKV,EAAKW,MAAMC,IAAKC,IAAKlB,MAEjC,sBAAKY,UAAU,aAAf,UACE,8BACGJ,EADH,KACiBP,KAEjB,6BAAKM,IACL,4BAAIP,OAEN,qBAAKY,UAAU,eAAf,SACE,4BAAIR,YCdC8B,EAhBD,WACZ,MAAiCxC,qBAAWnB,GAApCO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAEvB,OAAID,EAAgB,2CAEhBC,EAAc,2EAGhB,yBAAS4B,UAAU,QAAnB,SACG9B,EAAKe,OAAO2B,KAAI,SAACzB,GAAD,OACf,cAAC,EAAD,CAAoBA,IAAKA,GAAdA,EAAIoC,WCJRC,EARF,WACX,OACE,+BACE,cAAC,EAAD,OCoBSC,EAlBH,WACV,IAAQ/C,EAAaI,qBAAWP,GAAxBG,SAER,OACE,sBAAKsB,UAAS,cAAStB,EAAW,OAAS,SAA3C,UACE,cAAC,EAAD,IACA,qBAAKsB,UAAU,YAAf,SAEI,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0B,KAAK,IAAIC,UAAWH,EAAMI,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAW9C,EAAQ+C,OAAK,aCRnDC,G,MAAS,IAAIC,IAAa,CAC9BC,IAAK,+DACLC,MAAO,IAAIC,OAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,cAMVS,SAASC,eAAe,W","file":"static/js/main.72a40afe.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nexport const JobContext = createContext();\n\nconst GET_JOBS = gql`\n  query GetJobs {\n    allJob(sort: { _createdAt: ASC }) {\n      _id\n      apply\n      company\n      contract\n      description\n      location\n      logoBackground\n      position\n      postedDate\n      website\n      logo {\n        asset {\n          url\n        }\n      }\n      requirement {\n        content\n        items\n      }\n      role {\n        content\n        items\n      }\n    }\n  }\n`;\n\nconst JobContextProvider = ({ children }) => {\n  const { data, loading, error } = useQuery(GET_JOBS);\n\n  return (\n    <JobContext.Provider value={{ data, loading, error }}>\n      {children}\n    </JobContext.Provider>\n  );\n};\n\nexport default JobContextProvider;\n","import React, { useState, createContext } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const updateTheme = () => setDarkMode(!darkMode);\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, updateTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import { useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { JobContext } from \"../context/JobContext\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nconst Detail = () => {\n  const { darkMode } = useContext(ThemeContext);\n\n  let { slug } = useParams();\n  const { data } = useContext(JobContext);\n\n  const pageData = data.allJob.filter((job) => job.company === slug);\n\n  const {\n    company,\n    contract,\n    apply,\n    description,\n    location,\n    logo,\n    logoBackground,\n    position,\n    postedDate,\n    requirement,\n    role,\n    website,\n  } = pageData[0];\n\n  return (\n    <div className={`detail ${darkMode ? \"dark\" : \"\"}`}>\n      <section className=\"detail-header\">\n        <div\n          className=\"detail-header__logo\"\n          style={{ backgroundColor: `${logoBackground}` }}\n        >\n          <img src={logo.asset.url} alt={company} />\n        </div>\n\n        <div className=\"detail-header__info\">\n          <div className=\"detail-header__info-company\">\n            <h2>{company}</h2>\n            <p>{website}</p>\n          </div>\n\n          <div className=\"detail-header__info-cta\">\n            <a\n              className=\"button\"\n              href={website}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              company site\n            </a>\n          </div>\n        </div>\n      </section>\n\n      <main className=\"detail-content\">\n        <section className=\"detail-content__header\">\n          <div className=\"detail-content__header-company\">\n            <p>\n              {postedDate} . {contract}\n            </p>\n            <h1>{position}</h1>\n            <p>{location}</p>\n          </div>\n\n          <div className=\"detail-content__header-cta\">\n            <a\n              href={apply}\n              className=\"button primary\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              apply now\n            </a>\n          </div>\n        </section>\n\n        <section className=\"detail-content__description\">\n          <p> {description} </p>\n        </section>\n\n        <section className=\"detail-content__requirements\">\n          <h3>requirements</h3>\n          <p> {requirement.content} </p>\n          <ul>\n            {requirement.items.map((item, inx) => (\n              <li key={inx}> {item} </li>\n            ))}\n          </ul>\n        </section>\n\n        <section className=\"detail-content__role\">\n          <h3>what you will do</h3>\n          <p> {role.content} </p>\n          <ol>\n            {role.items.map((role, inx) => (\n              <li key={inx}> {role} </li>\n            ))}\n          </ol>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Detail;\n","export default __webpack_public_path__ + \"static/media/logo.8c0b6449.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.9422c153.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.038e80ca.svg\";","import { Link } from \"react-router-dom\";\nimport Logo from \"../static/logo.svg\";\nimport Sun from \"../static/icon-sun.svg\";\nimport Moon from \"../static/icon-moon.svg\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nconst Header = () => {\n  const { darkMode, updateTheme } = useContext(ThemeContext);\n\n  return (\n    <header>\n      <div className=\"container\">\n        <Link to=\"/\">\n          <img src={Logo} alt=\"devjobs logo\" />\n        </Link>\n\n        <div className=\"theme-switch\">\n          <img src={Sun} alt=\"light mode\" />\n\n          <div className=\"toggler\" onClick={() => updateTheme()}>\n            <div className={`toggle ${darkMode ? \"dark\" : \"light\"}`}></div>\n          </div>\n\n          <img src={Moon} alt=\"dark mode\" />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nconst Card = ({ job }) => {\n  const { darkMode } = useContext(ThemeContext);\n\n  const {\n    company,\n    contract,\n    location,\n    position,\n    postedDate,\n    logo,\n    logoBackground,\n  } = job;\n\n  return (\n    <Link to={`/${company}`}>\n      <div className={`card ${darkMode ? \"dark\" : \"\"}`}>\n        <div\n          className=\"card__header\"\n          style={{ backgroundColor: `${logoBackground}` }}\n        >\n          <img src={logo.asset.url} alt={company} />\n        </div>\n        <div className=\"card__body\">\n          <p>\n            {postedDate}. {contract}\n          </p>\n          <h2>{position}</h2>\n          <p>{company}</p>\n        </div>\n        <div className=\"card__footer\">\n          <p>{location}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","import { useContext } from \"react\";\nimport { JobContext } from \"../context/JobContext\";\nimport Card from \"./Card\";\n\nconst Cards = () => {\n  const { data, loading, error } = useContext(JobContext);\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Oops! Something wrong! Nothing to see here</p>;\n\n  return (\n    <section className=\"cards\">\n      {data.allJob.map((job) => (\n        <Card key={job._id} job={job} />\n      ))}\n    </section>\n  );\n};\n\nexport default Cards;\n","import Cards from \"./Cards\";\n\nconst Home = () => {\n  return (\n    <main>\n      <Cards />\n    </main>\n  );\n};\n\nexport default Home;\n","import { useContext } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport Detail from \"./components/Detail\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport { ThemeContext } from \"./context/ThemeContext\";\n\nconst App = () => {\n  const { darkMode } = useContext(ThemeContext);\n\n  return (\n    <div className={`App ${darkMode ? \"dark\" : \"light\"}`}>\n      <Header />\n      <div className=\"container\">\n        {\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/:slug\" component={Detail} exact />\n          </Switch>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ThemeContextProvider from \"./context/ThemeContext\";\nimport \"./index.css\";\nimport JobContextProvider from \"./context/JobContext\";\n\nconst client = new ApolloClient({\n  uri: \"https://vo3k3jpo.api.sanity.io/v1/graphql/production/default\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <ThemeContextProvider>\n          <JobContextProvider>\n            <App />\n          </JobContextProvider>\n        </ThemeContextProvider>\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}